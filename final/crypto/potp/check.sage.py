

# This file was *autogenerated* from the file check.sage
from sage.all_cmdline import *   # import sage library

_sage_const_18281 = Integer(18281); _sage_const_2 = Integer(2); _sage_const_8 = Integer(8); _sage_const_20 = Integer(20); _sage_const_126 = Integer(126); _sage_const_9 = Integer(9); _sage_const_1 = Integer(1); _sage_const_127 = Integer(127)
import secrets
import random

mod = _sage_const_18281 

x1 = secrets.randbelow(int(_sage_const_2 **_sage_const_8 ))
x2 = secrets.randbelow(int(_sage_const_2 **_sage_const_8 ))

m = random.randint(_sage_const_20 ,_sage_const_126 )
c1 = secrets.randbelow(int(_sage_const_2 **_sage_const_8 ))
c2 = secrets.randbelow(int(_sage_const_2 **_sage_const_8 ))

print(m)

divisorsList = {}
divideList = {}

for i in range(_sage_const_2 **_sage_const_9 ):
    for j in range(i + _sage_const_1 , _sage_const_2 **_sage_const_9 ):
        k = (i * j) % mod
        
        if k not in divisorsList:
            divisorsList[k] = []

        if i not in divisorsList[k]:
            divisorsList[k].append(i)
        if j not in divisorsList[k]:
            divisorsList[k].append(j)
        
        if (k, j) not in divideList:
            divideList[(k,j)] = []

        if (k, i) not in divideList:
            divideList[(k,i)] = []

        if j not in divideList[(k,i)]:
            divideList[(k,i)].append(j)
        if i not in divideList[(k,j)]:
            divideList[(k,j)].append(i)


k1 = Zmod(mod)(x1 * m + x2 * m)
k2 = Zmod(mod)(x1 * c1)
k3 = Zmod(mod)(x2 * c2)


for i in divisorsList[k2]:
    ok = False
    for t in divideList[(k2,i)]:
        if (t <= _sage_const_2 **_sage_const_8 ):
            ok = True
            break
    if (i >= _sage_const_2 **_sage_const_8  or not ok):
        continue
    for j in divisorsList[k3]:
        ok = False
        for t in divideList[(k3,j)]:
            if (t <= _sage_const_2 **_sage_const_8 ):
                ok = True
                break
        if (j >= _sage_const_2 **_sage_const_8  or not ok):
            continue

        k = (i + j) % mod
        if ((k1,k) not in divideList):
            continue
        for z in divideList[(k1,k)]:
            if (_sage_const_20  <= z <= _sage_const_127 ):
                print(z)

