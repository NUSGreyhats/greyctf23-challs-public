const readline = require('readline');

const rl = readline.createInterface({
  input: process.stdin,
  output: process.stdout
});

rl.question('Gimme something: ', (flag) => {
    arr = [0, 97, 115, 109, 1, 0, 0, 0, 1, 5, 1, 96, 0, 1, 127, 3, 2, 1, 0, 7, 9, 1, 5, 99, 104, 101, 99, 107, 0, 0, 10, 220, 7, 1, 217, 7, 0, 65, 0, 65, 0, 106, 65, 63, 113, 65, 2, 71, 65, 0, 65, 0, 106, 65, 63, 113, 65, 57, 71, 65, 0, 65, 0, 106, 65, 63, 113, 65, 29, 71, 65, 0, 65, 0, 106, 65, 63, 113, 65, 63, 71, 65, 0, 65, 0, 106, 65, 63, 113, 65, 44, 71, 65, 0, 65, 0, 106, 65, 63, 113, 65, 53, 71, 65, 0, 65, 0, 106, 65, 63, 113, 65, 42, 71, 65, 0, 65, 0, 106, 65, 63, 113, 65, 45, 71, 65, 0, 65, 0, 106, 65, 63, 113, 65, 43, 71, 65, 0, 65, 0, 106, 65, 63, 113, 65, 42, 71, 65, 0, 65, 0, 106, 65, 63, 113, 65, 35, 71, 65, 0, 65, 0, 106, 65, 63, 113, 65, 37, 71, 65, 0, 65, 0, 106, 65, 63, 113, 65, 62, 71, 65, 0, 65, 0, 106, 65, 63, 113, 65, 28, 71, 65, 0, 65, 0, 106, 65, 63, 113, 65, 36, 71, 65, 0, 65, 0, 106, 65, 63, 113, 65, 56, 71, 65, 0, 65, 0, 106, 65, 63, 113, 65, 59, 71, 65, 0, 65, 0, 106, 65, 63, 113, 65, 60, 71, 65, 0, 65, 0, 106, 65, 63, 113, 65, 35, 71, 65, 0, 65, 0, 106, 65, 63, 113, 65, 39, 71, 65, 0, 65, 0, 106, 65, 63, 113, 65, 40, 71, 65, 0, 65, 0, 106, 65, 63, 113, 65, 60, 71, 65, 0, 65, 0, 106, 65, 63, 113, 65, 50, 71, 65, 0, 65, 0, 106, 65, 63, 113, 65, 50, 71, 65, 0, 65, 0, 106, 65, 63, 113, 65, 50, 71, 65, 0, 65, 0, 106, 65, 63, 113, 65, 20, 71, 65, 0, 65, 0, 106, 65, 63, 113, 65, 61, 71, 65, 0, 65, 0, 106, 65, 63, 113, 65, 32, 71, 65, 0, 65, 0, 106, 65, 63, 113, 65, 38, 71, 65, 0, 65, 0, 106, 65, 63, 113, 65, 40, 71, 65, 0, 65, 0, 106, 65, 63, 113, 65, 47, 71, 65, 0, 65, 0, 106, 65, 63, 113, 65, 42, 71, 65, 0, 65, 0, 106, 65, 63, 113, 65, 43, 71, 65, 0, 65, 0, 106, 65, 63, 113, 65, 31, 71, 65, 0, 65, 0, 106, 65, 63, 113, 65, 37, 71, 65, 0, 65, 0, 106, 65, 63, 113, 65, 24, 71, 65, 0, 65, 0, 106, 65, 63, 113, 65, 28, 71, 65, 0, 65, 0, 106, 65, 63, 113, 65, 24, 71, 65, 0, 65, 0, 106, 65, 63, 113, 65, 19, 71, 65, 0, 65, 0, 106, 65, 63, 113, 65, 49, 71, 65, 0, 65, 0, 106, 65, 63, 113, 65, 33, 71, 65, 0, 65, 0, 106, 65, 63, 113, 65, 55, 71, 65, 0, 65, 0, 106, 65, 63, 113, 65, 38, 71, 65, 0, 65, 0, 106, 65, 63, 113, 65, 62, 71, 65, 0, 65, 0, 106, 65, 63, 113, 65, 48, 71, 65, 0, 65, 0, 106, 65, 63, 113, 65, 39, 71, 65, 0, 65, 0, 106, 65, 63, 113, 65, 53, 71, 65, 0, 65, 0, 106, 65, 63, 113, 65, 38, 71, 65, 0, 65, 0, 106, 65, 63, 113, 65, 20, 71, 65, 0, 65, 0, 106, 65, 63, 113, 65, 33, 71, 65, 0, 65, 0, 106, 65, 63, 113, 65, 42, 71, 65, 0, 65, 0, 106, 65, 63, 113, 65, 3, 71, 65, 0, 65, 0, 106, 65, 63, 113, 65, 40, 71, 65, 0, 65, 0, 106, 65, 63, 113, 65, 0, 71, 65, 0, 65, 0, 106, 65, 63, 113, 65, 7, 71, 65, 0, 65, 0, 106, 65, 63, 113, 65, 35, 71, 65, 0, 65, 0, 106, 65, 63, 113, 65, 45, 71, 65, 0, 65, 0, 106, 65, 63, 113, 65, 35, 71, 65, 0, 65, 0, 106, 65, 63, 113, 65, 62, 71, 65, 0, 65, 0, 106, 65, 63, 113, 65, 46, 71, 65, 0, 65, 0, 106, 65, 63, 113, 65, 20, 71, 65, 0, 65, 0, 106, 65, 63, 113, 65, 44, 71, 65, 0, 65, 0, 106, 65, 63, 113, 65, 55, 71, 65, 0, 65, 0, 106, 65, 63, 113, 65, 33, 71, 65, 0, 65, 0, 106, 65, 63, 113, 65, 1, 71, 65, 0, 65, 0, 106, 65, 63, 113, 65, 37, 71, 65, 0, 65, 0, 106, 65, 63, 113, 65, 2, 71, 65, 0, 65, 0, 106, 65, 63, 113, 65, 4, 71, 65, 0, 65, 0, 106, 65, 63, 113, 65, 43, 71, 65, 0, 65, 0, 106, 65, 63, 113, 65, 47, 71, 65, 0, 65, 0, 106, 65, 63, 113, 65, 29, 71, 65, 0, 65, 0, 106, 65, 63, 113, 65, 26, 71, 65, 0, 65, 0, 106, 65, 63, 113, 65, 32, 71, 65, 0, 65, 0, 106, 65, 63, 113, 65, 19, 71, 65, 0, 65, 0, 106, 65, 63, 113, 65, 32, 71, 65, 0, 65, 0, 106, 65, 63, 113, 65, 52, 71, 65, 0, 65, 0, 106, 65, 63, 113, 65, 47, 71, 65, 0, 65, 0, 106, 65, 63, 113, 65, 42, 71, 65, 0, 65, 0, 106, 65, 63, 113, 65, 53, 71, 65, 0, 65, 0, 106, 65, 63, 113, 65, 31, 71, 65, 0, 65, 0, 106, 65, 63, 113, 65, 47, 71, 65, 0, 65, 0, 106, 65, 63, 113, 65, 0, 71, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 11]
    rep = [[566, 843], [159, 238], [579, 643], [225, 557], [137, 293], [447, 533], [832, 863], [62, 808], [269, 546], [271, 390], [720, 733], [161, 753], [280, 876], [203, 700], [599, 645], [744, 885], [170, 227], [214, 766], [326, 797], [181, 315], [357, 920], [258, 403], [335, 854], [480, 687], [544, 755], [126, 777], [456], [467, 590], [115, 656], [104, 513], [401, 667], [249, 621], [799, 874], [445, 502], [577, 722], [665, 909], [304, 764], [40, 434], [368, 425], [324, 865], [49, 205], [392, 489], [731, 788], [260, 676], [313, 711], [469, 610], [139, 830], [689, 896], [38, 194, 929], [381], [414, 742], [71, 370], [84, 236], [379, 535], [522, 678], [117, 819], [247, 887], [291, 524], [698, 821], [491, 786], [412, 634], [423, 612], [73, 93], [51, 918], [216, 588], [95, 500], [150, 346], [192, 601], [148, 458], [282, 302], [511, 810], [359, 852], [709, 898], [555, 568], [82, 183], [60, 436], [337, 907], [348, 478], [172, 654], [128, 841], [106, 632], [623, 775]]
    
    for (let i = 0; i < 82; i++) {
        poss = rep[i];
        for (const pos of poss) {
            new_val = "abcdefghijklmnopqrstuvwxyz0123456789_{}".indexOf(flag[i]);
            if (new_val < 0) {
                console.log("Too bad");
                rl.close();
                return;
            }
            arr[pos] = new_val;
        }
    }

    const wasmBinBuf = new Uint8Array(arr)
    WebAssembly.instantiate(wasmBinBuf).then(wasmModule => {
        result = wasmModule.instance.exports.check();
        if (result) {
            console.log("Too bad");
        } else {
            console.log("Bingo");
        }
    });
    rl.close();
});
