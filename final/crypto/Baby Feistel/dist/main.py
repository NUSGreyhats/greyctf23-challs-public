from hashlib import md5
import random
import string

xor = lambda a,b:bytes([i^j for i,j in zip(a,b)])

int2bytes = lambda n: bytes([(n%256,n:=n//256)[0] for i in range(16)][::-1])
bytes2int = lambda b: int(b.hex(),16)

MIX = [107632798521572819694764108404904109375, 41536741957891467431472232877751864376, 275576770983938755827220589369303781975, 234236451662009148302826684340536433335, 167356592051306863969732200182719434359, 3964872179755557916019346905353137736, 261654592197979525204490051641223914986, 130534506910667985170179545870071095171, 110547794064929106567581040448523263944, 184063535252587585286044863527738743538, 164357339419512390377522630828102169288, 199930288846991086238436587886041223038, 177192341130030822677616530029496840095, 214572440504728654991188419790259127601, 114580049840189248087547627033034844626, 160013292840662875257096750676572257331, 27182818284590452353602874713526624977]

def encrypt(bk, key):
    l, r = bk[:16], bk[16:]
    for i in range(19):
        l, r = r, xor(l,md5(r+int2bytes(key)).digest())
        key = sum(M*pow(key,n,5**55) for n,M in enumerate(MIX))%(5**55)
    return r+l

FLAG = b"grey{([|<REDACTED>|])}"
assert FLAG[:5]==b"grey{"
assert FLAG[-1]==ord("}")
assert len(FLAG)==22
for i in FLAG:
    assert chr(i) in string.printable
key = bytes2int(FLAG[5:-1])

random.seed(0)
for _ in range(1000):
    pt = random.randbytes(32)
    ct = encrypt(pt,key)
    assert pt==encrypt(ct,key)
