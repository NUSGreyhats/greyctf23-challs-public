

# This file was *autogenerated* from the file main.sage
from sage.all_cmdline import *   # import sage library

_sage_const_2 = Integer(2); _sage_const_13 = Integer(13); _sage_const_0 = Integer(0); _sage_const_20 = Integer(20); _sage_const_127 = Integer(127)
import secrets
from random import randint

FLAG = b'grey{hFSeQZr6PP3L9Cwx_more_vulnerable_than_xor_f9xZ3tDhTMVT73bu}'

F = Zmod(_sage_const_2 **_sage_const_13 )['x']; (x,) = F._first_ngens(1)

def bytes_to_poly(s):
    res = _sage_const_0 
    for i in range(len(s)):
        res += x**i * s[i]
    return res

def genOtp(n):
    return bytes_to_poly(secrets.token_bytes(n))

n = len(FLAG)

otp2 = genOtp(n)
otp3 = genOtp(n) 
otp1 = otp2 + otp3

m2 = bytes_to_poly(bytes([randint(_sage_const_20 , _sage_const_127 ) for _ in range(n)]))
m3 = bytes_to_poly(bytes([randint(_sage_const_20 , _sage_const_127 ) for _ in range(n)]))
m1 = bytes_to_poly(FLAG)

print(m1 * otp1)
print(m2 * otp2)
print(m3 * otp3)


